{"includedArchiveIdentifiers":["KurrentDB"],"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/getting-started","title":"Getting started","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/init(settings:numberofthreads:defaultcalloptions:)","title":"init(settings: ClientSettings, numberOfThreads: Int, defaultCallOptions: CallOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/defaultcalloptions","title":"let defaultCallOptions: CallOptions","type":"property"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/settings","title":"let settings: ClientSettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/appendstream(to:events:configure:)-37y1t","title":"func appendStream(to: StreamIdentifier, events: [EventData], configure: (Streams.Append.Options) -> Streams.Append.Options) async throws -> Streams.Append.Response","type":"method"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/appendstream(to:events:configure:)-5z9oo","title":"func appendStream(to: StreamIdentifier, events: EventData..., configure: (Streams.Append.Options) -> Streams.Append.Options) async throws -> Streams.Append.Response","type":"method"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/createpersistentsubscription(to:groupname:configure:)","title":"func createPersistentSubscription(to: StreamIdentifier, groupName: String, configure: (PersistentSubscriptions.CreateToStream.Options) -> PersistentSubscriptions.CreateToStream.Options) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/createpersistentsubscriptiontoall(groupname:configure:)","title":"func createPersistentSubscriptionToAll(groupName: String, configure: (PersistentSubscriptions.CreateToAll.Options) -> PersistentSubscriptions.CreateToAll.Options) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/deletepersistentsubscription(streamselector:groupname:)","title":"func deletePersistentSubscription(streamSelector: StreamSelector<StreamIdentifier>, groupName: String) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/deletestream(to:configure:)","title":"func deleteStream(to: StreamIdentifier, configure: (Streams.Delete.Options) -> Streams.Delete.Options) async throws -> Streams.Delete.Response","type":"method"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/getstreammetadata(to:cursor:)","title":"func getStreamMetadata(to: StreamIdentifier, cursor: Cursor<CursorPointer>) async throws -> StreamMetadata?","type":"method"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/listpersistentsubscription(streamselector:)","title":"func listPersistentSubscription(streamSelector: StreamSelector<StreamIdentifier>) async throws -> [PersistentSubscription.SubscriptionInfo]","type":"method"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/readallstreams(cursor:configure:)","title":"func readAllStreams(cursor: Cursor<Streams.ReadAll.CursorPointer>, configure: (Streams.Read.Options) -> Streams.Read.Options) async throws -> Streams.Read.Responses","type":"method"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/readstream(to:at:direction:configure:)","title":"func readStream(to: StreamIdentifier, at: UInt64, direction: Direction, configure: (Streams.Read.Options) -> Streams.Read.Options) async throws -> Streams.Read.Responses","type":"method"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/readstream(to:cursor:configure:)","title":"func readStream(to: StreamIdentifier, cursor: Cursor<CursorPointer>, configure: (Streams.Read.Options) -> Streams.Read.Options) async throws -> Streams.Read.Responses","type":"method"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/restartpersistentsubscriptionsubsystem()","title":"func restartPersistentSubscriptionSubsystem() async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/setmetadata(to:metadata:configure:)","title":"func setMetadata(to: StreamIdentifier, metadata: StreamMetadata, configure: (Streams.Append.Options) -> Streams.Append.Options) async throws -> Streams.Append.Response","type":"method"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/startscavenge(threadcount:startfromchunk:)","title":"func startScavenge(threadCount: Int32, startFromChunk: Int32) async throws -> Operations.ScavengeResponse","type":"method"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/stopscavenge(scavengeid:)","title":"func stopScavenge(scavengeId: String) async throws -> Operations.ScavengeResponse","type":"method"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/subscribepersistentsubscription(to:groupname:configure:)","title":"func subscribePersistentSubscription(to: StreamSelector<StreamIdentifier>, groupName: String, configure: (PersistentSubscriptions.Read.Options) -> PersistentSubscriptions.Read.Options) async throws -> PersistentSubscriptions.Subscription","type":"method"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/subscribeto(stream:from:configure:)","title":"func subscribeTo(stream: StreamIdentifier, from: Cursor<StreamRevision>, configure: (Streams.Subscribe.Options) -> Streams.Subscribe.Options) async throws -> Streams.Subscription","type":"method"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/subscribetoall(from:configure:)","title":"func subscribeToAll(from: Cursor<StreamPosition>, configure: (Streams.SubscribeToAll.Options) -> Streams.SubscribeToAll.Options) async throws -> Streams.Subscription","type":"method"},{"path":"\/documentation\/kurrentdb\/kurrentdbclient\/tombstonestream(to:configure:)","title":"func tombstoneStream(to: StreamIdentifier, configure: (Streams.Tombstone.Options) -> Streams.Tombstone.Options) async throws -> Streams.Tombstone.Response","type":"method"}],"path":"\/documentation\/kurrentdb\/kurrentdbclient","title":"KurrentDBClient","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/eventstoreevent\/eventtype","title":"var eventType: String","type":"property"},{"path":"\/documentation\/kurrentdb\/eventstoreevent\/id","title":"var id: UUID","type":"property"}],"path":"\/documentation\/kurrentdb\/eventstoreevent","title":"EventStoreEvent","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/clientsettings\/init(clustermode:configuration:)","title":"init(clusterMode: TopologyClusterMode, configuration: TLSConfiguration)","type":"init"},{"path":"\/documentation\/kurrentdb\/clientsettings\/init(clustermode:configure:)","title":"init(clusterMode: TopologyClusterMode, configure: () -> TLSConfiguration)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/clientsettings\/clustermode","title":"var clusterMode: TopologyClusterMode","type":"property"},{"path":"\/documentation\/kurrentdb\/clientsettings\/configuration","title":"var configuration: TLSConfiguration","type":"property"},{"path":"\/documentation\/kurrentdb\/clientsettings\/connectionname","title":"var connectionName: String?","type":"property"},{"path":"\/documentation\/kurrentdb\/clientsettings\/defaultdeadline","title":"var defaultDeadline: Int","type":"property"},{"path":"\/documentation\/kurrentdb\/clientsettings\/defaultusercredentials","title":"var defaultUserCredentials: UserCredentials?","type":"property"},{"path":"\/documentation\/kurrentdb\/clientsettings\/keepalive","title":"var keepAlive: KeepAlive","type":"property"},{"path":"\/documentation\/kurrentdb\/clientsettings\/tls","title":"var tls: Bool","type":"property"},{"path":"\/documentation\/kurrentdb\/clientsettings\/tlsverifycert","title":"var tlsVerifyCert: Bool","type":"property"},{"path":"\/documentation\/kurrentdb\/clientsettings\/trustroots","title":"var trustRoots: TLSConfig.TrustRootsSource?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/clientsettings\/localhost(port:usercredentials:trustroots:)","title":"static func localhost(port: UInt32, userCredentials: UserCredentials?, trustRoots: NIOSSLTrustRoots?) -> ClientSettings","type":"method"},{"path":"\/documentation\/kurrentdb\/clientsettings\/parse(connectionstring:)","title":"static func parse(connectionString: String) throws -> ClientSettings","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/clientsettings\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/kurrentdb\/clientsettings\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/clientsettings\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/clientsettings\/stringliteraltype","title":"ClientSettings.StringLiteralType","type":"typealias"}],"path":"\/documentation\/kurrentdb\/clientsettings\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/clientsettings\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/kurrentdb\/clientsettings\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/clientsettings","title":"ClientSettings","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/cursorpointer\/direction","title":"let direction: Direction","type":"property"},{"path":"\/documentation\/kurrentdb\/cursorpointer\/revision","title":"let revision: UInt64","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/cursorpointer\/backwardfrom(revision:)","title":"static func backwardFrom(revision: UInt64) -> CursorPointer","type":"method"},{"path":"\/documentation\/kurrentdb\/cursorpointer\/forwardon(revision:)","title":"static func forwardOn(revision: UInt64) -> CursorPointer","type":"method"}],"path":"\/documentation\/kurrentdb\/cursorpointer","title":"CursorPointer","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/endpoint\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/kurrentdb\/endpoint\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/endpoint\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/kurrentdb\/endpoint\/==(_:_:)","title":"static func == (Endpoint, Endpoint) -> Bool","type":"op"}],"path":"\/documentation\/kurrentdb\/endpoint\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/endpoint","title":"Endpoint","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/eventdata\/init(id:eventtype:payload:contenttype:custommetadata:)","title":"init(id: UUID, eventType: String, payload: EventData.Content, contentType: ContentType, customMetadata: Data?)","type":"init"},{"path":"\/documentation\/kurrentdb\/eventdata\/init(id:eventtype:payload:custommetadata:)","title":"init(id: UUID, eventType: String, payload: any Codable & Sendable, customMetadata: Data?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/eventdata\/custommetadata","title":"var customMetadata: Data?","type":"property"},{"path":"\/documentation\/kurrentdb\/eventdata\/eventtype","title":"var eventType: String","type":"property"},{"path":"\/documentation\/kurrentdb\/eventdata\/id","title":"var id: UUID","type":"property"},{"path":"\/documentation\/kurrentdb\/eventdata\/metadata","title":"var metadata: [String : String]","type":"property"},{"path":"\/documentation\/kurrentdb\/eventdata\/payload","title":"var payload: EventData.Content","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/eventdata\/content\/binary(_:)","title":"case binary(Data)","type":"case"},{"path":"\/documentation\/kurrentdb\/eventdata\/content\/json(_:)","title":"case json(any Codable & Sendable)","type":"case"}],"path":"\/documentation\/kurrentdb\/eventdata\/content","title":"EventData.Content","type":"enum"}],"path":"\/documentation\/kurrentdb\/eventdata","title":"EventData","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/memberinfo\/httpendpoint","title":"let httpEndPoint: Endpoint","type":"property"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/memberinfo\/instanceid","title":"let instanceId: UUID","type":"property"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/memberinfo\/isalive","title":"let isAlive: Bool","type":"property"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/memberinfo\/state","title":"let state: Gossip.Read.NodeState","type":"property"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/memberinfo\/timestamp","title":"let timeStamp: TimeInterval","type":"property"}],"path":"\/documentation\/kurrentdb\/gossip\/read\/memberinfo","title":"Gossip.Read.MemberInfo","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/response","title":"Gossip.Read.Response","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/nodestate\/unrecognized(_:)","title":"case UNRECOGNIZED(Int)","type":"case"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/nodestate\/catchingup","title":"case catchingUp","type":"case"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/nodestate\/clone","title":"case clone","type":"case"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/nodestate\/discoverleader","title":"case discoverLeader","type":"case"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/nodestate\/follower","title":"case follower","type":"case"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/nodestate\/initializing","title":"case initializing","type":"case"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/nodestate\/leader","title":"case leader","type":"case"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/nodestate\/manager","title":"case manager","type":"case"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/nodestate\/preleader","title":"case preLeader","type":"case"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/nodestate\/prereadonlyreplica","title":"case preReadOnlyReplica","type":"case"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/nodestate\/prereplica","title":"case preReplica","type":"case"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/nodestate\/readonlyleaderless","title":"case readOnlyLeaderless","type":"case"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/nodestate\/readonlyreplica","title":"case readOnlyReplica","type":"case"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/nodestate\/resigningleader","title":"case resigningLeader","type":"case"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/nodestate\/shutdown","title":"case shutdown","type":"case"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/nodestate\/shuttingdown","title":"case shuttingDown","type":"case"},{"path":"\/documentation\/kurrentdb\/gossip\/read\/nodestate\/unknown","title":"case unknown","type":"case"}],"path":"\/documentation\/kurrentdb\/gossip\/read\/nodestate","title":"Gossip.Read.NodeState","type":"enum"}],"path":"\/documentation\/kurrentdb\/gossip\/read","title":"Gossip.Read","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/gossip\/init(settings:calloptions:eventloopgroup:)","title":"init(settings: ClientSettings, callOptions: CallOptions, eventLoopGroup: any EventLoopGroup)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/gossip\/calloptions","title":"var callOptions: CallOptions","type":"property"},{"path":"\/documentation\/kurrentdb\/gossip\/eventloopgroup","title":"let eventLoopGroup: any EventLoopGroup","type":"property"},{"path":"\/documentation\/kurrentdb\/gossip\/settings","title":"var settings: ClientSettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/gossip\/read()","title":"func read() async throws -> Gossip.Read.Response","type":"method"}],"path":"\/documentation\/kurrentdb\/gossip","title":"Gossip","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/keepalive\/default","title":"static let `default`: KeepAlive","type":"property"}],"path":"\/documentation\/kurrentdb\/keepalive","title":"KeepAlive","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/monitoring\/stats\/init(usemetadata:refreshtimeperiodinms:)","title":"init(useMetadata: Bool, refreshTimePeriodInMs: UInt64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/monitoring\/stats\/refreshtimeperiodinms","title":"let refreshTimePeriodInMs: UInt64","type":"property"},{"path":"\/documentation\/kurrentdb\/monitoring\/stats\/usemetadata","title":"let useMetadata: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/monitoring\/stats\/response","title":"Monitoring.Stats.Response","type":"struct"}],"path":"\/documentation\/kurrentdb\/monitoring\/stats\/responsehandlable-implementations","title":"ResponseHandlable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/monitoring\/stats","title":"Monitoring.Stats","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/monitoring\/init(settings:calloptions:eventloopgroup:)","title":"init(settings: ClientSettings, callOptions: CallOptions, eventLoopGroup: any EventLoopGroup)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/monitoring\/calloptions","title":"var callOptions: CallOptions","type":"property"},{"path":"\/documentation\/kurrentdb\/monitoring\/eventloopgroup","title":"let eventLoopGroup: any EventLoopGroup","type":"property"},{"path":"\/documentation\/kurrentdb\/monitoring\/settings","title":"var settings: ClientSettings","type":"property"}],"path":"\/documentation\/kurrentdb\/monitoring","title":"Monitoring","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/operations\/mergeindexes\/init()","title":"init()","type":"init"}],"path":"\/documentation\/kurrentdb\/operations\/mergeindexes","title":"Operations.MergeIndexes","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/operations\/resignnode\/init()","title":"init()","type":"init"}],"path":"\/documentation\/kurrentdb\/operations\/resignnode","title":"Operations.ResignNode","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/operations\/restartpersistentsubscriptions\/init()","title":"init()","type":"init"}],"path":"\/documentation\/kurrentdb\/operations\/restartpersistentsubscriptions","title":"Operations.RestartPersistentSubscriptions","type":"struct"},{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/operations\/scavengeresponse\/scavengeresult\/inprogress","title":"case inProgress","type":"case"},{"path":"\/documentation\/kurrentdb\/operations\/scavengeresponse\/scavengeresult\/started","title":"case started","type":"case"},{"path":"\/documentation\/kurrentdb\/operations\/scavengeresponse\/scavengeresult\/stopped","title":"case stopped","type":"case"},{"path":"\/documentation\/kurrentdb\/operations\/scavengeresponse\/scavengeresult\/unrecognized(_:)","title":"case unrecognized(Int)","type":"case"}],"path":"\/documentation\/kurrentdb\/operations\/scavengeresponse\/scavengeresult","title":"Operations.ScavengeResponse.ScavengeResult","type":"enum"}],"path":"\/documentation\/kurrentdb\/operations\/scavengeresponse","title":"Operations.ScavengeResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/operations\/setnodepriority\/init(priority:)","title":"init(priority: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/operations\/setnodepriority\/priority","title":"let priority: Int32","type":"property"}],"path":"\/documentation\/kurrentdb\/operations\/setnodepriority","title":"Operations.SetNodePriority","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/operations\/shutdown\/init()","title":"init()","type":"init"}],"path":"\/documentation\/kurrentdb\/operations\/shutdown","title":"Operations.Shutdown","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/operations\/startscavenge\/init(threadcount:startfromchunk:)","title":"init(threadCount: Int32, startFromChunk: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/operations\/startscavenge\/startfromchunk","title":"let startFromChunk: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/operations\/startscavenge\/threadcount","title":"let threadCount: Int32","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/operations\/startscavenge\/response","title":"Operations.StartScavenge.Response","type":"typealias"}],"path":"\/documentation\/kurrentdb\/operations\/startscavenge","title":"Operations.StartScavenge","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/operations\/stopscavenge\/init(scavengeid:)","title":"init(scavengeId: String)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/operations\/stopscavenge\/response","title":"Operations.StopScavenge.Response","type":"typealias"}],"path":"\/documentation\/kurrentdb\/operations\/stopscavenge","title":"Operations.StopScavenge","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/operations\/init(settings:calloptions:eventloopgroup:)","title":"init(settings: ClientSettings, callOptions: CallOptions, eventLoopGroup: any EventLoopGroup)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/operations\/calloptions","title":"var callOptions: CallOptions","type":"property"},{"path":"\/documentation\/kurrentdb\/operations\/eventloopgroup","title":"let eventLoopGroup: any EventLoopGroup","type":"property"},{"path":"\/documentation\/kurrentdb\/operations\/settings","title":"var settings: ClientSettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/operations\/mergeindeexes()","title":"func mergeIndeexes() async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/operations\/resignnode()","title":"func resignNode() async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/operations\/restartpersistentsubscriptions()","title":"func restartPersistentSubscriptions() async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/operations\/setnodepriority(priority:)","title":"func setNodePriority(priority: Int32) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/operations\/shutdown()","title":"func shutdown() async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/operations\/startscavenge(threadcount:startfromchunk:)","title":"func startScavenge(threadCount: Int32, startFromChunk: Int32) async throws -> Operations.StartScavenge.Response","type":"method"},{"path":"\/documentation\/kurrentdb\/operations\/stopscavenge(scavengeid:)","title":"func stopScavenge(scavengeId: String) async throws -> Operations.StopScavenge.Response","type":"method"}],"path":"\/documentation\/kurrentdb\/operations","title":"Operations","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/connectioninfo\/availableslots","title":"let availableSlots: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/connectioninfo\/averageitemspersecond","title":"let averageItemsPerSecond: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/connectioninfo\/connectionname","title":"let connectionName: String","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/connectioninfo\/countsincelastmeasurement","title":"let countSinceLastMeasurement: Int64","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/connectioninfo\/from","title":"let from: String","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/connectioninfo\/inflightmessages","title":"let inFlightMessages: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/connectioninfo\/obervedmeasurements","title":"let obervedMeasurements: [PersistentSubscription.Measurement]","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/connectioninfo\/totalitems","title":"let totalItems: Int64","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/connectioninfo\/username","title":"let username: String","type":"property"}],"path":"\/documentation\/kurrentdb\/persistentsubscription\/connectioninfo","title":"PersistentSubscription.ConnectionInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/eventresult\/event","title":"let event: ReadEvent","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/eventresult\/retrycount","title":"let retryCount: Int32","type":"property"}],"path":"\/documentation\/kurrentdb\/persistentsubscription\/eventresult","title":"PersistentSubscription.EventResult","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/measurement\/key","title":"let key: String","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/measurement\/value","title":"let value: Int64","type":"property"}],"path":"\/documentation\/kurrentdb\/persistentsubscription\/measurement","title":"PersistentSubscription.Measurement","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/settings\/init(resolvelink:extrastatistics:messagetimeout:maxretrycount:checkpointcount:maxsubscribercount:livebuffersize:readbatchsize:historybuffersize:checkpointafter:consumerstrategy:)","title":"init(resolveLink: Bool, extraStatistics: Bool, messageTimeout: TimeSpan, maxRetryCount: Int32, checkpointCount: ClosedRange<Int32>, maxSubscriberCount: Int32, liveBufferSize: Int32, readBatchSize: Int32, historyBufferSize: Int32, checkpointAfter: TimeSpan, consumerStrategy: PersistentSubscription.SystemConsumerStrategy)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/settings\/checkpointafter","title":"var checkpointAfter: TimeSpan","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/settings\/checkpointcount","title":"var checkpointCount: ClosedRange<Int32>","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/settings\/consumerstrategy","title":"var consumerStrategy: PersistentSubscription.SystemConsumerStrategy","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/settings\/extrastatistics","title":"var extraStatistics: Bool","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/settings\/historybuffersize","title":"var historyBufferSize: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/settings\/livebuffersize","title":"var liveBufferSize: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/settings\/maxretrycount","title":"var maxRetryCount: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/settings\/maxsubscribercount","title":"var maxSubscriberCount: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/settings\/messagetimeout","title":"var messageTimeout: TimeSpan","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/settings\/readbatchsize","title":"var readBatchSize: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/settings\/resolvelink","title":"var resolveLink: Bool","type":"property"}],"path":"\/documentation\/kurrentdb\/persistentsubscription\/settings","title":"PersistentSubscription.Settings","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/averagepersecond","title":"let averagePerSecond: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/buffersize","title":"let bufferSize: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/checkpointaftermilliseconds","title":"let checkPointAfterMilliseconds: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/connections","title":"let connections: [PersistentSubscription.ConnectionInfo]","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/countsincelastmeasurement","title":"let countSinceLastMeasurement: Int64","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/eventsource","title":"let eventSource: String","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/extrastatistics","title":"let extraStatistics: Bool","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/groupname","title":"let groupName: String","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/lastcheckpointedeventposition","title":"let lastCheckpointedEventPosition: String","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/lastknowneventposition","title":"let lastKnownEventPosition: String","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/livebuffercount","title":"let liveBufferCount: Int64","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/livebuffersize","title":"let liveBufferSize: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/maxcheckpointcount","title":"let maxCheckPointCount: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/maxretrycount","title":"let maxRetryCount: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/maxsubscribercount","title":"let maxSubscriberCount: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/messagetimeoutmilliseconds","title":"let messageTimeoutMilliseconds: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/mincheckpointcount","title":"let minCheckPointCount: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/namedconsumerstrategy","title":"let namedConsumerStrategy: String","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/outstandingmessagecount","title":"let outstandingMessageCount: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/parkedmessagecount","title":"let parkedMessageCount: Int64","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/readbatchsize","title":"let readBatchSize: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/readbuffercount","title":"let readBufferCount: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/resolvelinktos","title":"let resolveLinkTos: Bool","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/retrybuffercount","title":"let retryBufferCount: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/startfrom","title":"let startFrom: String","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/status","title":"let status: String","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/totalinflightmessages","title":"let totalInFlightMessages: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo\/totalitems","title":"let totalItems: Int64","type":"property"}],"path":"\/documentation\/kurrentdb\/persistentsubscription\/subscriptioninfo","title":"PersistentSubscription.SubscriptionInfo","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/streamselection\/all(position:filteroption:)","title":"case all(position: Cursor<StreamPosition>, filterOption: SubscriptionFilter?)","type":"case"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/streamselection\/specified(identifier:revision:)","title":"case specified(identifier: StreamIdentifier, revision: Cursor<UInt64>)","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/streamselection\/specified(identifier:)","title":"static func specified(identifier: StreamIdentifier) -> PersistentSubscription.StreamSelection","type":"method"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/streamselection\/specified(streamname:revision:)","title":"static func specified(streamName: String, revision: Cursor<UInt64>) -> PersistentSubscription.StreamSelection","type":"method"}],"path":"\/documentation\/kurrentdb\/persistentsubscription\/streamselection","title":"PersistentSubscription.StreamSelection","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/systemconsumerstrategy\/custom(_:)","title":"case custom(String)","type":"case"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/systemconsumerstrategy\/dispatchtosingle","title":"case dispatchToSingle","type":"case"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/systemconsumerstrategy\/pinned","title":"case pinned","type":"case"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/systemconsumerstrategy\/pinnedbycorrelation","title":"case pinnedByCorrelation","type":"case"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/systemconsumerstrategy\/roundrobin","title":"case roundRobin","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/systemconsumerstrategy\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/systemconsumerstrategy\/rawvalue-swift.property","title":"var rawValue: String","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscription\/systemconsumerstrategy\/rawvalue-swift.typealias","title":"PersistentSubscription.SystemConsumerStrategy.RawValue","type":"typealias"}],"path":"\/documentation\/kurrentdb\/persistentsubscription\/systemconsumerstrategy","title":"PersistentSubscription.SystemConsumerStrategy","type":"enum"}],"path":"\/documentation\/kurrentdb\/persistentsubscription","title":"PersistentSubscription","type":"struct"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/subscription\/events","title":"let events: AsyncThrowingStream<PersistentSubscription.EventResult, any Error>","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/subscription\/subscriptionid","title":"let subscriptionId: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/subscription\/ack(readevents:)-3vxnk","title":"func ack(readEvents: [ReadEvent]) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/subscription\/ack(readevents:)-6z4hy","title":"func ack(readEvents: ReadEvent...) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/subscription\/nack(readevents:action:reason:)-8sl3x","title":"func nack(readEvents: [ReadEvent], action: PersistentSubscriptions.Nack.Action, reason: String) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/subscription\/nack(readevents:action:reason:)-hqv6","title":"func nack(readEvents: ReadEvent..., action: PersistentSubscriptions.Nack.Action, reason: String) async throws","type":"method"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/subscription","title":"PersistentSubscriptions.Subscription","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/ack\/subscriptionconfirmation","title":"PersistentSubscriptions.Ack.SubscriptionConfirmation","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/ack\/eventids","title":"let eventIds: [UUID]","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/ack\/id","title":"let id: Data","type":"property"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/ack","title":"PersistentSubscriptions.Ack","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/createtoall\/options\/init(settings:filter:positioncursor:)","title":"init(settings: PersistentSubscription.Settings, filter: SubscriptionFilter?, positionCursor: Cursor<StreamPosition>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/createtoall\/options\/filter","title":"var filter: SubscriptionFilter?","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/createtoall\/options\/positioncursor","title":"var positionCursor: Cursor<StreamPosition>","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/createtoall\/options\/settings","title":"var settings: PersistentSubscription.Settings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/createtoall\/options\/set(consumerstrategy:)","title":"func set(consumerStrategy: PersistentSubscription.SystemConsumerStrategy) -> PersistentSubscriptions.CreateToAll.Options","type":"method"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/createtoall\/options\/startfrom(position:)","title":"func startFrom(position: Cursor<StreamPosition>) -> PersistentSubscriptions.CreateToAll.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/createtoall\/options","title":"PersistentSubscriptions.CreateToAll.Options","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/createtoall\/init(groupname:options:)","title":"init(groupName: String, options: PersistentSubscriptions.CreateToAll.Options)","type":"init"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/createtoall","title":"PersistentSubscriptions.CreateToAll","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/createtostream\/options\/init(settings:revisioncursor:)","title":"init(settings: PersistentSubscription.Settings, revisionCursor: Cursor<StreamRevision>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/createtostream\/options\/revisioncursor","title":"var revisionCursor: Cursor<StreamRevision>","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/createtostream\/options\/settings","title":"var settings: PersistentSubscription.Settings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/createtostream\/options\/set(consumerstrategy:)","title":"func set(consumerStrategy: PersistentSubscription.SystemConsumerStrategy) -> PersistentSubscriptions.CreateToStream.Options","type":"method"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/createtostream\/options\/startfrom(revision:)","title":"func startFrom(revision: Cursor<StreamRevision>) -> PersistentSubscriptions.CreateToStream.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/createtostream\/options","title":"PersistentSubscriptions.CreateToStream.Options","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/createtostream\/init(streamidentifier:groupname:options:)","title":"init(streamIdentifier: StreamIdentifier, groupName: String, options: PersistentSubscriptions.CreateToStream.Options)","type":"init"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/createtostream","title":"PersistentSubscriptions.CreateToStream","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/delete\/init(stream:groupname:)","title":"init(stream: StreamSelector<StreamIdentifier>, groupName: String)","type":"init"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/delete","title":"PersistentSubscriptions.Delete","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/getinfo\/init(stream:groupname:)","title":"init(stream: StreamSelector<StreamIdentifier>, groupName: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/getinfo\/groupname","title":"let groupName: String","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/getinfo\/stream","title":"let stream: StreamSelector<StreamIdentifier>","type":"property"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/getinfo","title":"PersistentSubscriptions.GetInfo","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/list\/options-swift.struct\/listallscriptions()","title":"static func listAllScriptions() -> PersistentSubscriptions.List.Options","type":"method"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/list\/options-swift.struct\/listforstream(_:)","title":"static func listForStream(StreamIdentifier) throws -> PersistentSubscriptions.List.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/list\/options-swift.struct","title":"PersistentSubscriptions.List.Options","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/list\/init(options:)","title":"init(options: PersistentSubscriptions.List.Options)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/list\/options-swift.property","title":"let options: PersistentSubscriptions.List.Options","type":"property"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/list","title":"PersistentSubscriptions.List","type":"struct"},{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/nack\/action\/park","title":"case park","type":"case"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/nack\/action\/retry","title":"case retry","type":"case"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/nack\/action\/skip","title":"case skip","type":"case"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/nack\/action\/stop","title":"case stop","type":"case"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/nack\/action\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/nack\/action\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/nack\/action\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/nack\/action\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/nack\/action\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/nack\/action\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/nack\/action\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/nack\/action","title":"PersistentSubscriptions.Nack.Action","type":"enum"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/nack","title":"PersistentSubscriptions.Nack","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/read\/options-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/read\/options-swift.struct\/buffersize","title":"var bufferSize: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/read\/options-swift.struct\/uuidoption","title":"var uuidOption: UUID.Option","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/read\/options-swift.struct\/set(buffersize:)","title":"func set(bufferSize: Int32) -> PersistentSubscriptions.Read.Options","type":"method"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/read\/options-swift.struct\/set(uuidoption:)","title":"func set(uuidOption: UUID.Option) -> PersistentSubscriptions.Read.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/read\/options-swift.struct","title":"PersistentSubscriptions.Read.Options","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/read\/groupname","title":"let groupName: String","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/read\/options-swift.property","title":"let options: PersistentSubscriptions.Read.Options","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/read\/streamselection","title":"let streamSelection: StreamSelector<StreamIdentifier>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/read\/response\/confirmation(subscriptionid:)","title":"case confirmation(subscriptionId: String)","type":"case"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/read\/response\/readevent(event:retrycount:)","title":"case readEvent(event: ReadEvent, retryCount: Int32)","type":"case"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/read\/response","title":"PersistentSubscriptions.Read.Response","type":"enum"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/read\/responsehandlable-implementations","title":"ResponseHandlable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/read","title":"PersistentSubscriptions.Read","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/replayparked\/options\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/replayparked\/options\/stop(at:)","title":"func stop(at: PersistentSubscriptions.ReplayParked.Options.StopAtOption) -> PersistentSubscriptions.ReplayParked.Options","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/replayparked\/options\/stopatoption\/nolimit","title":"case noLimit","type":"case"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/replayparked\/options\/stopatoption\/position(position:)","title":"case position(position: Int64)","type":"case"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/replayparked\/options\/stopatoption","title":"PersistentSubscriptions.ReplayParked.Options.StopAtOption","type":"enum"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/replayparked\/options","title":"PersistentSubscriptions.ReplayParked.Options","type":"struct"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/replayparked","title":"PersistentSubscriptions.ReplayParked","type":"struct"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/restartsubsystem","title":"PersistentSubscriptions.RestartSubsystem","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/updatetoall\/options\/init(settings:positioncursor:)","title":"init(settings: PersistentSubscription.Settings, positionCursor: Cursor<StreamPosition>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/updatetoall\/options\/positioncursor","title":"var positionCursor: Cursor<StreamPosition>","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/updatetoall\/options\/settings","title":"var settings: PersistentSubscription.Settings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/updatetoall\/options\/startfrom(cursor:)","title":"func startFrom(cursor: Cursor<StreamPosition>) -> PersistentSubscriptions.UpdateToAll.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/updatetoall\/options","title":"PersistentSubscriptions.UpdateToAll.Options","type":"struct"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/updatetoall","title":"PersistentSubscriptions.UpdateToAll","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/updatetostream\/options\/init(settings:revisioncursor:)","title":"init(settings: PersistentSubscription.Settings, revisionCursor: Cursor<StreamRevision>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/updatetostream\/options\/revisioncursor","title":"var revisionCursor: Cursor<StreamRevision>","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/updatetostream\/options\/settings","title":"var settings: PersistentSubscription.Settings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/updatetostream\/options\/startfrom(cursor:)","title":"func startFrom(cursor: Cursor<StreamRevision>) -> PersistentSubscriptions.UpdateToStream.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/updatetostream\/options","title":"PersistentSubscriptions.UpdateToStream.Options","type":"struct"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/updatetostream","title":"PersistentSubscriptions.UpdateToStream","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/init(settings:calloptions:eventloopgroup:)","title":"init(settings: ClientSettings, callOptions: CallOptions, eventLoopGroup: any EventLoopGroup)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/calloptions","title":"var callOptions: CallOptions","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/eventloopgroup","title":"let eventLoopGroup: any EventLoopGroup","type":"property"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/settings","title":"var settings: ClientSettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/createtoall(groupname:options:)","title":"func createToAll(groupName: String, options: PersistentSubscriptions.CreateToAll.Options) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/createtostream(streamidentifier:groupname:options:)","title":"func createToStream(streamIdentifier: StreamIdentifier, groupName: String, options: PersistentSubscriptions.CreateToStream.Options) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/delete(stream:groupname:)","title":"func delete(stream: StreamSelector<StreamIdentifier>, groupName: String) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/getinfo(stream:groupname:)","title":"func getInfo(stream: StreamSelector<StreamIdentifier>, groupName: String) async throws -> PersistentSubscription.SubscriptionInfo","type":"method"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/list(streamselector:)","title":"func list(streamSelector: StreamSelector<StreamIdentifier>) async throws -> [PersistentSubscription.SubscriptionInfo]","type":"method"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/replayparkedmessages(stream:groupname:options:)","title":"func replayParkedMessages(stream: StreamSelector<StreamIdentifier>, groupName: String, options: PersistentSubscriptions.ReplayParked.Options) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/restartsubsystem()","title":"func restartSubsystem() async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/subscribe(_:groupname:options:)","title":"func subscribe(StreamSelector<StreamIdentifier>, groupName: String, options: PersistentSubscriptions.Read.Options) async throws -> PersistentSubscriptions.Subscription","type":"method"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/updatetoall(identifier:groupname:options:)","title":"func updateToAll(identifier: StreamIdentifier, groupName: String, options: PersistentSubscriptions.UpdateToAll.Options) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptions\/updatetostream(identifier:groupname:options:)","title":"func updateToStream(identifier: StreamIdentifier, groupName: String, options: PersistentSubscriptions.UpdateToStream.Options) async throws","type":"method"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptions","title":"PersistentSubscriptions","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/continuouscreate\/options-swift.struct\/init(emitenabled:trackemittedstreams:)","title":"init(emitEnabled: Bool, trackEmittedStreams: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/continuouscreate\/options-swift.struct\/emitenabled","title":"var emitEnabled: Bool","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/continuouscreate\/options-swift.struct\/trackemittedstreams","title":"var trackEmittedStreams: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/continuouscreate\/options-swift.struct\/emit(enabled:)","title":"func emit(enabled: Bool) -> Projections.ContinuousCreate.Options","type":"method"},{"path":"\/documentation\/kurrentdb\/projections\/continuouscreate\/options-swift.struct\/trackemittedstreams(_:)","title":"func trackEmittedStreams(Bool) -> Projections.ContinuousCreate.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/projections\/continuouscreate\/options-swift.struct","title":"Projections.ContinuousCreate.Options","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/continuouscreate\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/continuouscreate\/options-swift.property","title":"let options: Projections.ContinuousCreate.Options","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/continuouscreate\/query","title":"let query: String","type":"property"}],"path":"\/documentation\/kurrentdb\/projections\/continuouscreate","title":"Projections.ContinuousCreate","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/delete\/options-swift.struct\/init(deletecheckpointstream:deleteemittedstreams:deletestatestream:)","title":"init(deleteCheckpointStream: Bool, deleteEmittedStreams: Bool, deleteStateStream: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/delete\/options-swift.struct\/deletecheckpointstream","title":"var deleteCheckpointStream: Bool","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/delete\/options-swift.struct\/deleteemittedstreams","title":"var deleteEmittedStreams: Bool","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/delete\/options-swift.struct\/deletestatestream","title":"var deleteStateStream: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/delete\/options-swift.struct\/deletecheckpointstream(enabled:)","title":"func deleteCheckpointStream(enabled: Bool) -> Projections.Delete.Options","type":"method"},{"path":"\/documentation\/kurrentdb\/projections\/delete\/options-swift.struct\/deleteemittedstreams(enabled:)","title":"func deleteEmittedStreams(enabled: Bool) -> Projections.Delete.Options","type":"method"},{"path":"\/documentation\/kurrentdb\/projections\/delete\/options-swift.struct\/deletestatestream(enabled:)","title":"func deleteStateStream(enabled: Bool) -> Projections.Delete.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/projections\/delete\/options-swift.struct","title":"Projections.Delete.Options","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/delete\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/delete\/options-swift.property","title":"let options: Projections.Delete.Options","type":"property"}],"path":"\/documentation\/kurrentdb\/projections\/delete","title":"Projections.Delete","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/disable\/options-swift.struct\/init(writecheckpoint:)","title":"init(writeCheckpoint: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/disable\/options-swift.struct\/writecheckpoint(enabled:)","title":"func writeCheckpoint(enabled: Bool) -> Projections.Disable.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/projections\/disable\/options-swift.struct","title":"Projections.Disable.Options","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/disable\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/disable\/options-swift.property","title":"let options: Projections.Disable.Options","type":"property"}],"path":"\/documentation\/kurrentdb\/projections\/disable","title":"Projections.Disable","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/enable\/options-swift.struct\/init()","title":"init()","type":"init"}],"path":"\/documentation\/kurrentdb\/projections\/enable\/options-swift.struct","title":"Projections.Enable.Options","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/enable\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/enable\/options-swift.property","title":"let options: Projections.Enable.Options","type":"property"}],"path":"\/documentation\/kurrentdb\/projections\/enable","title":"Projections.Enable","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/reset\/options\/init(writecheckpoint:)","title":"init(writeCheckpoint: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/reset\/options\/writecheckpoint","title":"var writeCheckpoint: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/reset\/options\/writecheckpoint(enable:)","title":"func writeCheckpoint(enable: Bool) -> Projections.Reset.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/projections\/reset\/options","title":"Projections.Reset.Options","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/reset\/init(name:options:)","title":"init(name: String, options: Projections.Reset.Options)","type":"init"}],"path":"\/documentation\/kurrentdb\/projections\/reset","title":"Projections.Reset","type":"struct"},{"path":"\/documentation\/kurrentdb\/projections\/restartsubsystem","title":"Projections.RestartSubsystem","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/result\/options-swift.struct\/partition(_:)","title":"func partition(String) -> Projections.Result.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/projections\/result\/options-swift.struct","title":"Projections.Result.Options","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/result\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/result\/options-swift.property","title":"let options: Projections.Result.Options","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/result\/response\/jsonvalue","title":"var jsonValue: Google_Protobuf_Value","type":"property"}],"path":"\/documentation\/kurrentdb\/projections\/result\/response","title":"Projections.Result.Response","type":"struct"}],"path":"\/documentation\/kurrentdb\/projections\/result\/responsehandlable-implementations","title":"ResponseHandlable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/projections\/result","title":"Projections.Result","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/state\/options-swift.struct\/partition(_:)","title":"func partition(String) -> Projections.State.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/projections\/state\/options-swift.struct","title":"Projections.State.Options","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/state\/init(name:options:)","title":"init(name: String, options: Projections.State.Options)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/state\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/state\/options-swift.property","title":"let options: Projections.State.Options","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/state\/response\/jsonvalue","title":"var jsonValue: Google_Protobuf_Value","type":"property"}],"path":"\/documentation\/kurrentdb\/projections\/state\/response","title":"Projections.State.Response","type":"struct"}],"path":"\/documentation\/kurrentdb\/projections\/state\/responsehandlable-implementations","title":"ResponseHandlable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/projections\/state","title":"Projections.State","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/options-swift.struct\/set(mode:)","title":"func set(mode: Projections.Statistics.ModeOptions) -> Projections.Statistics.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/projections\/statistics\/options-swift.struct","title":"Projections.Statistics.Options","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/init(name:options:)","title":"init(name: String, options: Projections.Statistics.Options)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/options-swift.property","title":"let options: Projections.Statistics.Options","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/responses","title":"Projections.Statistics.Responses","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/modeoptions\/all","title":"case all","type":"case"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/modeoptions\/continuous","title":"case continuous","type":"case"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/modeoptions\/onetime","title":"case oneTime","type":"case"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/modeoptions\/transient","title":"case transient","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/modeoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kurrentdb\/projections\/statistics\/modeoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/projections\/statistics\/modeoptions","title":"Projections.Statistics.ModeOptions","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/response\/bufferedevents","title":"let bufferedEvents: Int64","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/response\/checkpointstatus","title":"let checkpointStatus: String","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/response\/coreprocessingtime","title":"let coreProcessingTime: Int64","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/response\/effectivename","title":"let effectiveName: String","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/response\/epoch","title":"let epoch: Int64","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/response\/eventsprocessedafterrestart","title":"let eventsProcessedAfterRestart: Int64","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/response\/lastcheckpoint","title":"let lastCheckpoint: String","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/response\/mode","title":"let mode: String","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/response\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/response\/partitionscached","title":"let partitionsCached: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/response\/position","title":"let position: String","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/response\/progress","title":"let progress: Float","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/response\/readsinprogress","title":"let readsInProgress: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/response\/statereason","title":"let stateReason: String","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/response\/status","title":"let status: String","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/response\/version","title":"let version: Int64","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/response\/writependingeventsaftercheckpoint","title":"let writePendingEventsAfterCheckpoint: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/response\/writependingeventsbeforecheckpoint","title":"let writePendingEventsBeforeCheckpoint: Int32","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/statistics\/response\/writesinprogress","title":"let writesInProgress: Int32","type":"property"}],"path":"\/documentation\/kurrentdb\/projections\/statistics\/response","title":"Projections.Statistics.Response","type":"struct"}],"path":"\/documentation\/kurrentdb\/projections\/statistics\/responsehandlable-implementations","title":"ResponseHandlable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/projections\/statistics","title":"Projections.Statistics","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/update\/options-swift.struct\/init(emitoption:)","title":"init(emitOption: Projections.Update.EmitOption)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/update\/options-swift.struct\/emitoption","title":"var emitOption: Projections.Update.EmitOption","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/update\/options-swift.struct\/emit(enabled:)","title":"func emit(enabled: Bool) -> Projections.Update.Options","type":"method"},{"path":"\/documentation\/kurrentdb\/projections\/update\/options-swift.struct\/noemit()","title":"func noEmit() -> Projections.Update.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/projections\/update\/options-swift.struct","title":"Projections.Update.Options","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/update\/init(name:query:options:)","title":"init(name: String, query: String?, options: Projections.Update.Options)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/update\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/update\/options-swift.property","title":"let options: Projections.Update.Options","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/update\/query","title":"let query: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/update\/emitoption\/enable(_:)","title":"case enable(Bool)","type":"case"},{"path":"\/documentation\/kurrentdb\/projections\/update\/emitoption\/noemit","title":"case noEmit","type":"case"}],"path":"\/documentation\/kurrentdb\/projections\/update\/emitoption","title":"Projections.Update.EmitOption","type":"enum"}],"path":"\/documentation\/kurrentdb\/projections\/update","title":"Projections.Update","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/init(settings:calloptions:eventloopgroup:)","title":"init(settings: ClientSettings, callOptions: CallOptions, eventLoopGroup: any EventLoopGroup)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/calloptions","title":"var callOptions: CallOptions","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/eventloopgroup","title":"let eventLoopGroup: any EventLoopGroup","type":"property"},{"path":"\/documentation\/kurrentdb\/projections\/settings","title":"var settings: ClientSettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/projections\/create(name:query:options:)","title":"func create(name: String, query: String, options: Projections.ContinuousCreate.Options) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/projections\/delete(name:options:)","title":"func delete(name: String, options: Projections.Delete.Options) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/projections\/disable(name:writecheckpoint:)","title":"func disable(name: String, writeCheckpoint: Bool) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/projections\/enable(name:)","title":"func enable(name: String) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/projections\/reset(name:writecheckpoint:)","title":"func reset(name: String, writeCheckpoint: Bool) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/projections\/result(name:partition:)","title":"func result(name: String, partition: String?) async throws -> Projections.Result.Response","type":"method"},{"path":"\/documentation\/kurrentdb\/projections\/state(name:partition:)","title":"func state(name: String, partition: String?) async throws -> Projections.State.Response","type":"method"},{"path":"\/documentation\/kurrentdb\/projections\/statistics(name:mode:)","title":"func statistics(name: String, mode: Projections.Statistics.ModeOptions) async throws -> Projections.Statistics.Responses","type":"method"},{"path":"\/documentation\/kurrentdb\/projections\/update(name:query:emit:)","title":"func update(name: String, query: String?, emit: Projections.Update.EmitOption) async throws","type":"method"}],"path":"\/documentation\/kurrentdb\/projections","title":"Projections","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/readevent\/commitposition","title":"var commitPosition: StreamPosition?","type":"property"},{"path":"\/documentation\/kurrentdb\/readevent\/linkedrecordedevent","title":"var linkedRecordedEvent: RecordedEvent?","type":"property"},{"path":"\/documentation\/kurrentdb\/readevent\/noposition","title":"var noPosition: Bool","type":"property"},{"path":"\/documentation\/kurrentdb\/readevent\/recordedevent","title":"var recordedEvent: RecordedEvent","type":"property"}],"path":"\/documentation\/kurrentdb\/readevent","title":"ReadEvent","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/recordedevent\/contenttype","title":"var contentType: ContentType","type":"property"},{"path":"\/documentation\/kurrentdb\/recordedevent\/custommetadata","title":"var customMetadata: Data","type":"property"},{"path":"\/documentation\/kurrentdb\/recordedevent\/data","title":"var data: Data","type":"property"},{"path":"\/documentation\/kurrentdb\/recordedevent\/eventtype","title":"var eventType: String","type":"property"},{"path":"\/documentation\/kurrentdb\/recordedevent\/id","title":"var id: UUID","type":"property"},{"path":"\/documentation\/kurrentdb\/recordedevent\/metadata","title":"var metadata: [String : String]","type":"property"},{"path":"\/documentation\/kurrentdb\/recordedevent\/position","title":"var position: StreamPosition","type":"property"},{"path":"\/documentation\/kurrentdb\/recordedevent\/revision","title":"var revision: UInt64","type":"property"},{"path":"\/documentation\/kurrentdb\/recordedevent\/streamidentifier","title":"var streamIdentifier: StreamIdentifier","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/recordedevent\/decode(to:)","title":"func decode<T>(to: T.Type) throws -> T?","type":"method"}],"path":"\/documentation\/kurrentdb\/recordedevent","title":"RecordedEvent","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streamidentifier\/init(name:encoding:)","title":"init(name: String, encoding: String.Encoding)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streamidentifier\/encoding","title":"var encoding: String.Encoding","type":"property"},{"path":"\/documentation\/kurrentdb\/streamidentifier\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streamidentifier\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/kurrentdb\/streamidentifier\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streamidentifier\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streamidentifier\/stringliteraltype","title":"StreamIdentifier.StringLiteralType","type":"typealias"}],"path":"\/documentation\/kurrentdb\/streamidentifier\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streamidentifier\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/kurrentdb\/streamidentifier\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/streamidentifier","title":"StreamIdentifier","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streammetadata\/streamacl\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streammetadata\/streamacl\/deleteroles","title":"var deleteRoles: [String]?","type":"property"},{"path":"\/documentation\/kurrentdb\/streammetadata\/streamacl\/metareadroles","title":"var metaReadRoles: [String]?","type":"property"},{"path":"\/documentation\/kurrentdb\/streammetadata\/streamacl\/metawriteroles","title":"var metaWriteRoles: [String]?","type":"property"},{"path":"\/documentation\/kurrentdb\/streammetadata\/streamacl\/readroles","title":"var readRoles: [String]?","type":"property"},{"path":"\/documentation\/kurrentdb\/streammetadata\/streamacl\/writeroles","title":"var writeRoles: [String]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streammetadata\/streamacl\/deleteroles(_:)","title":"func deleteRoles([String]) -> StreamMetadata.StreamAcl","type":"method"},{"path":"\/documentation\/kurrentdb\/streammetadata\/streamacl\/metareadroles(_:)","title":"func metaReadRoles([String]) -> StreamMetadata.StreamAcl","type":"method"},{"path":"\/documentation\/kurrentdb\/streammetadata\/streamacl\/metawriteroles(_:)","title":"func metaWriteRoles([String]) -> StreamMetadata.StreamAcl","type":"method"},{"path":"\/documentation\/kurrentdb\/streammetadata\/streamacl\/readroles(_:)","title":"func readRoles([String]) -> StreamMetadata.StreamAcl","type":"method"},{"path":"\/documentation\/kurrentdb\/streammetadata\/streamacl\/writeroles(_:)","title":"func writeRoles([String]) -> StreamMetadata.StreamAcl","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streammetadata\/streamacl\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/kurrentdb\/streammetadata\/streamacl\/==(_:_:)","title":"static func == (StreamMetadata.StreamAcl, StreamMetadata.StreamAcl) -> Bool","type":"op"}],"path":"\/documentation\/kurrentdb\/streammetadata\/streamacl\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/streammetadata\/streamacl","title":"StreamMetadata.StreamAcl","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streammetadata\/init()","title":"init()","type":"init"},{"path":"\/documentation\/kurrentdb\/streammetadata\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streammetadata\/acl(_:)","title":"func acl(StreamMetadata.Acl) -> StreamMetadata","type":"method"},{"path":"\/documentation\/kurrentdb\/streammetadata\/cachecontrol(_:)","title":"func cacheControl(Duration) -> StreamMetadata","type":"method"},{"path":"\/documentation\/kurrentdb\/streammetadata\/customproperties(_:)","title":"func customProperties([String : String]) -> StreamMetadata","type":"method"},{"path":"\/documentation\/kurrentdb\/streammetadata\/maxage(_:)","title":"func maxAge(Duration) -> StreamMetadata","type":"method"},{"path":"\/documentation\/kurrentdb\/streammetadata\/maxcount(_:)","title":"func maxCount(UInt64) -> StreamMetadata","type":"method"},{"path":"\/documentation\/kurrentdb\/streammetadata\/truncatebefore(_:)","title":"func truncateBefore(UInt64) -> StreamMetadata","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streammetadata\/acl\/stream(_:)","title":"case stream(StreamMetadata.StreamAcl)","type":"case"},{"path":"\/documentation\/kurrentdb\/streammetadata\/acl\/systemstream","title":"case systemStream","type":"case"},{"path":"\/documentation\/kurrentdb\/streammetadata\/acl\/userstream","title":"case userStream","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streammetadata\/acl\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streammetadata\/acl\/rawvalue-swift.property","title":"var rawValue: Data","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streammetadata\/acl\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streammetadata\/acl\/rawvalue-swift.typealias","title":"StreamMetadata.Acl.RawValue","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streammetadata\/acl\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/kurrentdb\/streammetadata\/acl\/==(_:_:)","title":"static func == (StreamMetadata.Acl, StreamMetadata.Acl) -> Bool","type":"op"}],"path":"\/documentation\/kurrentdb\/streammetadata\/acl\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/streammetadata\/acl","title":"StreamMetadata.Acl","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streammetadata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/kurrentdb\/streammetadata\/==(_:_:)","title":"static func == (StreamMetadata, StreamMetadata) -> Bool","type":"op"}],"path":"\/documentation\/kurrentdb\/streammetadata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/streammetadata","title":"StreamMetadata","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streamposition\/commit","title":"let commit: UInt64","type":"property"},{"path":"\/documentation\/kurrentdb\/streamposition\/prepare","title":"let prepare: UInt64","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streamposition\/at(commitposition:prepareposition:)","title":"static func at(commitPosition: UInt64, preparePosition: UInt64?) -> StreamPosition","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streamposition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/kurrentdb\/streamposition\/==(_:_:)","title":"static func == (StreamPosition, StreamPosition) -> Bool","type":"op"}],"path":"\/documentation\/kurrentdb\/streamposition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/streamposition","title":"StreamPosition","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streamrevision\/value","title":"let value: UInt64","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streamrevision\/rule\/any","title":"case any","type":"case"},{"path":"\/documentation\/kurrentdb\/streamrevision\/rule\/nostream","title":"case noStream","type":"case"},{"path":"\/documentation\/kurrentdb\/streamrevision\/rule\/revision(_:)","title":"case revision(UInt64)","type":"case"},{"path":"\/documentation\/kurrentdb\/streamrevision\/rule\/streamexists","title":"case streamExists","type":"case"}],"path":"\/documentation\/kurrentdb\/streamrevision\/rule","title":"StreamRevision.Rule","type":"enum"}],"path":"\/documentation\/kurrentdb\/streamrevision","title":"StreamRevision","type":"struct"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/subscription\/events","title":"let events: AsyncThrowingStream<ReadEvent, any Error>","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/subscription\/subscriptionid","title":"let subscriptionId: String?","type":"property"}],"path":"\/documentation\/kurrentdb\/streams\/subscription","title":"Streams.Subscription","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/append\/options-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/append\/options-swift.struct\/expectedrevision","title":"var expectedRevision: StreamRevision.Rule","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/append\/options-swift.struct\/revision(expected:)","title":"func revision(expected: StreamRevision.Rule) -> Streams.Append.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/streams\/append\/options-swift.struct","title":"Streams.Append.Options","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/append\/wrongexpectedversionerror\/currentrevision","title":"let currentRevision: UInt64?","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/append\/wrongexpectedversionerror\/excepted","title":"let excepted: Streams.Append.WrongExpectedVersionError.ExpectedRevisionOption","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/append\/wrongexpectedversionerror\/expectedrevisionoption\/any","title":"case any","type":"case"},{"path":"\/documentation\/kurrentdb\/streams\/append\/wrongexpectedversionerror\/expectedrevisionoption\/nostream","title":"case noStream","type":"case"},{"path":"\/documentation\/kurrentdb\/streams\/append\/wrongexpectedversionerror\/expectedrevisionoption\/revision(_:)","title":"case revision(UInt64)","type":"case"},{"path":"\/documentation\/kurrentdb\/streams\/append\/wrongexpectedversionerror\/expectedrevisionoption\/streamexists","title":"case streamExists","type":"case"}],"path":"\/documentation\/kurrentdb\/streams\/append\/wrongexpectedversionerror\/expectedrevisionoption","title":"Streams.Append.WrongExpectedVersionError.ExpectedRevisionOption","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/append\/wrongexpectedversionerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/kurrentdb\/streams\/append\/wrongexpectedversionerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/streams\/append\/wrongexpectedversionerror","title":"Streams.Append.WrongExpectedVersionError","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/append\/events","title":"let events: [EventData]","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/append\/identifier","title":"let identifier: StreamIdentifier","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/append\/options-swift.property","title":"var options: Streams.Append.Options","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/append\/response\/currentrevision","title":"let currentRevision: UInt64?","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/append\/response\/position","title":"let position: StreamPosition?","type":"property"}],"path":"\/documentation\/kurrentdb\/streams\/append\/response","title":"Streams.Append.Response","type":"struct"}],"path":"\/documentation\/kurrentdb\/streams\/append\/responsehandlable-implementations","title":"ResponseHandlable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/streams\/append","title":"Streams.Append","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/delete\/options-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/delete\/options-swift.struct\/expectedrevision","title":"var expectedRevision: StreamRevision.Rule","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/delete\/options-swift.struct\/revision(expected:)","title":"func revision(expected: StreamRevision.Rule) -> Streams.Delete.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/streams\/delete\/options-swift.struct","title":"Streams.Delete.Options","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/delete\/options-swift.property","title":"let options: Streams.Delete.Options","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/delete\/streamidentifier","title":"let streamIdentifier: StreamIdentifier","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/delete\/response\/position","title":"var position: StreamPosition?","type":"property"}],"path":"\/documentation\/kurrentdb\/streams\/delete\/response","title":"Streams.Delete.Response","type":"struct"}],"path":"\/documentation\/kurrentdb\/streams\/delete\/responsehandlable-implementations","title":"ResponseHandlable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/streams\/delete","title":"Streams.Delete","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/read\/options-swift.struct\/init(resolvelinks:limit:uuidoption:compatibility:)","title":"init(resolveLinks: Bool, limit: UInt64, uuidOption: UUIDOption, compatibility: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/read\/options-swift.struct\/compatibility","title":"var compatibility: UInt32","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/read\/options-swift.struct\/limit","title":"var limit: UInt64","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/read\/options-swift.struct\/resolvelinks","title":"var resolveLinks: Bool","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/read\/options-swift.struct\/uuidoption","title":"var uuidOption: UUIDOption","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/read\/options-swift.struct\/set(compatibility:)","title":"func set(compatibility: UInt32) -> Streams.Read.Options","type":"method"},{"path":"\/documentation\/kurrentdb\/streams\/read\/options-swift.struct\/set(limit:)","title":"func set(limit: UInt64) -> Streams.Read.Options","type":"method"},{"path":"\/documentation\/kurrentdb\/streams\/read\/options-swift.struct\/set(resolvelinks:)","title":"func set(resolveLinks: Bool) -> Streams.Read.Options","type":"method"},{"path":"\/documentation\/kurrentdb\/streams\/read\/options-swift.struct\/set(uuidoption:)","title":"func set(uuidOption: UUIDOption) -> Streams.Read.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/streams\/read\/options-swift.struct","title":"Streams.Read.Options","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/read\/cursor","title":"let cursor: Cursor<CursorPointer>","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/read\/options-swift.property","title":"let options: Streams.Read.Options","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/read\/streamidentifier","title":"let streamIdentifier: StreamIdentifier","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/read\/responses","title":"Streams.Read.Responses","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/read\/response\/content-swift.property","title":"var content: Streams.Read.Response.Content","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/read\/response\/content-swift.enum\/commitposition(firststream:)","title":"case commitPosition(firstStream: UInt64)","type":"case"},{"path":"\/documentation\/kurrentdb\/streams\/read\/response\/content-swift.enum\/event(readevent:)","title":"case event(readEvent: ReadEvent)","type":"case"},{"path":"\/documentation\/kurrentdb\/streams\/read\/response\/content-swift.enum\/position(lastallstream:)","title":"case position(lastAllStream: StreamPosition)","type":"case"}],"path":"\/documentation\/kurrentdb\/streams\/read\/response\/content-swift.enum","title":"Streams.Read.Response.Content","type":"enum"}],"path":"\/documentation\/kurrentdb\/streams\/read\/response","title":"Streams.Read.Response","type":"struct"}],"path":"\/documentation\/kurrentdb\/streams\/read\/responsehandlable-implementations","title":"ResponseHandlable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/streams\/read","title":"Streams.Read","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/readall\/cursorpointer\/backwardfrom(commitposition:prepareposition:)","title":"static func backwardFrom(commitPosition: UInt64, preparePosition: UInt64) -> Streams.ReadAll.CursorPointer","type":"method"},{"path":"\/documentation\/kurrentdb\/streams\/readall\/cursorpointer\/forwardon(commitposition:prepareposition:)","title":"static func forwardOn(commitPosition: UInt64, preparePosition: UInt64) -> Streams.ReadAll.CursorPointer","type":"method"}],"path":"\/documentation\/kurrentdb\/streams\/readall\/cursorpointer","title":"Streams.ReadAll.CursorPointer","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/readall\/cursor","title":"let cursor: Cursor<Streams.ReadAll.CursorPointer>","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/readall\/options-swift.property","title":"let options: Streams.ReadAll.Options","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/readall\/options-swift.typealias","title":"Streams.ReadAll.Options","type":"typealias"},{"path":"\/documentation\/kurrentdb\/streams\/readall\/response","title":"Streams.ReadAll.Response","type":"typealias"}],"path":"\/documentation\/kurrentdb\/streams\/readall","title":"Streams.ReadAll","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/subscribe\/options-swift.struct\/init(resolvelinks:uuidoption:)","title":"init(resolveLinks: Bool, uuidOption: UUIDOption)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/subscribe\/options-swift.struct\/resolvelinks","title":"var resolveLinks: Bool","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/subscribe\/options-swift.struct\/uuidoption","title":"var uuidOption: UUIDOption","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/subscribe\/options-swift.struct\/set(resolvelinks:)","title":"func set(resolveLinks: Bool) -> Streams.Subscribe.Options","type":"method"},{"path":"\/documentation\/kurrentdb\/streams\/subscribe\/options-swift.struct\/set(uuidoption:)","title":"func set(uuidOption: UUIDOption) -> Streams.Subscribe.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/streams\/subscribe\/options-swift.struct","title":"Streams.Subscribe.Options","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/subscribe\/init(streamidentifier:cursor:options:)","title":"init(streamIdentifier: StreamIdentifier, cursor: Cursor<StreamRevision>, options: Streams.Subscribe.Options)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/subscribe\/cursor","title":"let cursor: Cursor<StreamRevision>","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/subscribe\/options-swift.property","title":"let options: Streams.Subscribe.Options","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/subscribe\/streamidentifier","title":"let streamIdentifier: StreamIdentifier","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/subscribe\/responses","title":"Streams.Subscribe.Responses","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/subscribe\/response\/content-swift.property","title":"var content: Streams.Subscribe.Response.Content","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/subscribe\/response\/content-swift.enum\/commitposition(firststream:)","title":"case commitPosition(firstStream: UInt64)","type":"case"},{"path":"\/documentation\/kurrentdb\/streams\/subscribe\/response\/content-swift.enum\/confirmation(subscriptionid:)","title":"case confirmation(subscriptionId: String)","type":"case"},{"path":"\/documentation\/kurrentdb\/streams\/subscribe\/response\/content-swift.enum\/event(readevent:)","title":"case event(readEvent: ReadEvent)","type":"case"},{"path":"\/documentation\/kurrentdb\/streams\/subscribe\/response\/content-swift.enum\/position(lastallstream:)","title":"case position(lastAllStream: StreamPosition)","type":"case"}],"path":"\/documentation\/kurrentdb\/streams\/subscribe\/response\/content-swift.enum","title":"Streams.Subscribe.Response.Content","type":"enum"}],"path":"\/documentation\/kurrentdb\/streams\/subscribe\/response","title":"Streams.Subscribe.Response","type":"struct"}],"path":"\/documentation\/kurrentdb\/streams\/subscribe\/responsehandlable-implementations","title":"ResponseHandlable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/streams\/subscribe","title":"Streams.Subscribe","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/subscribetoall\/options-swift.struct\/init(resolvelinks:uuidoption:filter:)","title":"init(resolveLinks: Bool, uuidOption: UUIDOption, filter: SubscriptionFilter?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/subscribetoall\/options-swift.struct\/filter","title":"var filter: SubscriptionFilter?","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/subscribetoall\/options-swift.struct\/resolvelinks","title":"var resolveLinks: Bool","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/subscribetoall\/options-swift.struct\/uuidoption","title":"var uuidOption: UUIDOption","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/subscribetoall\/options-swift.struct\/set(filter:)","title":"func set(filter: SubscriptionFilter) -> Streams.SubscribeToAll.Options","type":"method"},{"path":"\/documentation\/kurrentdb\/streams\/subscribetoall\/options-swift.struct\/set(resolvelinks:)","title":"func set(resolveLinks: Bool) -> Streams.SubscribeToAll.Options","type":"method"},{"path":"\/documentation\/kurrentdb\/streams\/subscribetoall\/options-swift.struct\/set(uuidoption:)","title":"func set(uuidOption: UUIDOption) -> Streams.SubscribeToAll.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/streams\/subscribetoall\/options-swift.struct","title":"Streams.SubscribeToAll.Options","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/subscribetoall\/cursor","title":"let cursor: Cursor<StreamPosition>","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/subscribetoall\/options-swift.property","title":"let options: Streams.SubscribeToAll.Options","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/subscribetoall\/responses","title":"Streams.SubscribeToAll.Responses","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/subscribetoall\/response\/content-swift.property","title":"var content: Streams.SubscribeToAll.Response.Content","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/subscribetoall\/response\/content-swift.enum\/commitposition(firststream:)","title":"case commitPosition(firstStream: UInt64)","type":"case"},{"path":"\/documentation\/kurrentdb\/streams\/subscribetoall\/response\/content-swift.enum\/confirmation(subscriptionid:)","title":"case confirmation(subscriptionId: String)","type":"case"},{"path":"\/documentation\/kurrentdb\/streams\/subscribetoall\/response\/content-swift.enum\/event(readevent:)","title":"case event(readEvent: ReadEvent)","type":"case"},{"path":"\/documentation\/kurrentdb\/streams\/subscribetoall\/response\/content-swift.enum\/position(lastallstream:)","title":"case position(lastAllStream: StreamPosition)","type":"case"}],"path":"\/documentation\/kurrentdb\/streams\/subscribetoall\/response\/content-swift.enum","title":"Streams.SubscribeToAll.Response.Content","type":"enum"}],"path":"\/documentation\/kurrentdb\/streams\/subscribetoall\/response","title":"Streams.SubscribeToAll.Response","type":"struct"}],"path":"\/documentation\/kurrentdb\/streams\/subscribetoall\/responsehandlable-implementations","title":"ResponseHandlable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/streams\/subscribetoall","title":"Streams.SubscribeToAll","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/tombstone\/options-swift.struct\/init(expectedrevision:)","title":"init(expectedRevision: StreamRevision.Rule)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/tombstone\/options-swift.struct\/expectedrevision","title":"var expectedRevision: StreamRevision.Rule","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/tombstone\/options-swift.struct\/revision(expected:)","title":"func revision(expected: StreamRevision.Rule) -> Streams.Tombstone.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/streams\/tombstone\/options-swift.struct","title":"Streams.Tombstone.Options","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/tombstone\/options-swift.property","title":"let options: Streams.Tombstone.Options","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/tombstone\/streamidentifier","title":"let streamIdentifier: StreamIdentifier","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/tombstone\/response\/position","title":"var position: StreamPosition?","type":"property"}],"path":"\/documentation\/kurrentdb\/streams\/tombstone\/response","title":"Streams.Tombstone.Response","type":"struct"}],"path":"\/documentation\/kurrentdb\/streams\/tombstone\/responsehandlable-implementations","title":"ResponseHandlable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/streams\/tombstone","title":"Streams.Tombstone","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/init(settings:calloptions:eventloopgroup:)","title":"init(settings: ClientSettings, callOptions: CallOptions, eventLoopGroup: any EventLoopGroup)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/calloptions","title":"var callOptions: CallOptions","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/eventloopgroup","title":"let eventLoopGroup: any EventLoopGroup","type":"property"},{"path":"\/documentation\/kurrentdb\/streams\/settings","title":"var settings: ClientSettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streams\/append(to:events:options:)","title":"func append(to: StreamIdentifier, events: [EventData], options: Streams.Append.Options) async throws -> Streams.Append.Response","type":"method"},{"path":"\/documentation\/kurrentdb\/streams\/delete(_:options:)","title":"func delete(StreamIdentifier, options: Streams.Delete.Options) async throws -> Streams.Delete.Response","type":"method"},{"path":"\/documentation\/kurrentdb\/streams\/getmetadata(on:cursor:)","title":"func getMetadata(on: StreamIdentifier, cursor: Cursor<CursorPointer>) async throws -> StreamMetadata?","type":"method"},{"path":"\/documentation\/kurrentdb\/streams\/read(_:cursor:options:)","title":"func read(StreamIdentifier, cursor: Cursor<CursorPointer>, options: Streams.Read.Options) async throws -> AsyncThrowingStream<Streams.Read.Response, any Error>","type":"method"},{"path":"\/documentation\/kurrentdb\/streams\/readall(cursor:options:)","title":"func readAll(cursor: Cursor<Streams.ReadAll.CursorPointer>, options: Streams.ReadAll.Options) async throws -> AsyncThrowingStream<Streams.ReadAll.Response, any Error>","type":"method"},{"path":"\/documentation\/kurrentdb\/streams\/readall(from:directto:options:)","title":"func readAll(from: StreamPosition, directTo: Direction, options: Streams.ReadAll.Options) async throws -> AsyncThrowingStream<Streams.ReadAll.Response, any Error>","type":"method"},{"path":"\/documentation\/kurrentdb\/streams\/setmetadata(to:metadata:options:)","title":"func setMetadata(to: StreamIdentifier, metadata: StreamMetadata, options: Streams.Append.Options) async throws -> Streams.Append.Response","type":"method"},{"path":"\/documentation\/kurrentdb\/streams\/subscribe(_:cursor:options:)","title":"func subscribe(StreamIdentifier, cursor: Cursor<StreamRevision>, options: Streams.Subscribe.Options) async throws -> Streams.Subscription","type":"method"},{"path":"\/documentation\/kurrentdb\/streams\/subscribetoall(cursor:options:)","title":"func subscribeToAll(cursor: Cursor<StreamPosition>, options: Streams.SubscribeToAll.Options) async throws -> Streams.Subscription","type":"method"},{"path":"\/documentation\/kurrentdb\/streams\/tombstone(_:options:)","title":"func tombstone(StreamIdentifier, options: Streams.Tombstone.Options) async throws -> Streams.Tombstone.Response","type":"method"}],"path":"\/documentation\/kurrentdb\/streams","title":"Streams","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/subscriptionfilter\/checkpointintervalmultiplier","title":"var checkpointIntervalMultiplier: UInt32","type":"property"},{"path":"\/documentation\/kurrentdb\/subscriptionfilter\/prefixes","title":"var prefixes: [String]","type":"property"},{"path":"\/documentation\/kurrentdb\/subscriptionfilter\/type","title":"var type: SubscriptionFilter.FilterType","type":"property"},{"path":"\/documentation\/kurrentdb\/subscriptionfilter\/window-swift.property","title":"var window: SubscriptionFilter.Window","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/subscriptionfilter\/add(prefix:)","title":"func add(prefix: String) -> SubscriptionFilter","type":"method"},{"path":"\/documentation\/kurrentdb\/subscriptionfilter\/set(checkpointintervalmultiplier:)","title":"func set(checkpointIntervalMultiplier: UInt32) -> SubscriptionFilter","type":"method"},{"path":"\/documentation\/kurrentdb\/subscriptionfilter\/set(max:)","title":"func set(max: UInt32) -> SubscriptionFilter","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/subscriptionfilter\/oneventtype(regex:)","title":"static func onEventType(regex: String) -> SubscriptionFilter","type":"method"},{"path":"\/documentation\/kurrentdb\/subscriptionfilter\/onstreamname(regex:)","title":"static func onStreamName(regex: String) -> SubscriptionFilter","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/subscriptionfilter\/filtertype\/eventtype(regex:)","title":"case eventType(regex: String)","type":"case"},{"path":"\/documentation\/kurrentdb\/subscriptionfilter\/filtertype\/streamname(regex:)","title":"case streamName(regex: String)","type":"case"}],"path":"\/documentation\/kurrentdb\/subscriptionfilter\/filtertype","title":"SubscriptionFilter.FilterType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/subscriptionfilter\/window-swift.enum\/count","title":"case count","type":"case"},{"path":"\/documentation\/kurrentdb\/subscriptionfilter\/window-swift.enum\/max(_:)","title":"case max(UInt32)","type":"case"}],"path":"\/documentation\/kurrentdb\/subscriptionfilter\/window-swift.enum","title":"SubscriptionFilter.Window","type":"enum"}],"path":"\/documentation\/kurrentdb\/subscriptionfilter","title":"SubscriptionFilter","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/usercredentials\/init(username:password:)","title":"init(username: String, password: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/usercredentials\/password","title":"let password: String","type":"property"},{"path":"\/documentation\/kurrentdb\/usercredentials\/username","title":"let username: String","type":"property"}],"path":"\/documentation\/kurrentdb\/usercredentials","title":"UserCredentials","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/userdetails\/init(loginname:fullname:groups:lastupdated:disabled:)","title":"init(loginName: String, fullName: String, groups: [String], lastUpdated: Date, disabled: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/userdetails\/disabled","title":"var disabled: Bool","type":"property"},{"path":"\/documentation\/kurrentdb\/userdetails\/fullname","title":"var fullName: String","type":"property"},{"path":"\/documentation\/kurrentdb\/userdetails\/groups","title":"var groups: [String]","type":"property"},{"path":"\/documentation\/kurrentdb\/userdetails\/lastupdated","title":"var lastUpdated: Date","type":"property"},{"path":"\/documentation\/kurrentdb\/userdetails\/loginname","title":"var loginName: String","type":"property"}],"path":"\/documentation\/kurrentdb\/userdetails","title":"UserDetails","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/users\/changepassword\/init(loginname:currentpassword:newpassword:)","title":"init(loginName: String, currentPassword: String, newPassword: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/users\/changepassword\/loginname","title":"let loginName: String","type":"property"}],"path":"\/documentation\/kurrentdb\/users\/changepassword","title":"Users.ChangePassword","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/users\/create\/init(loginname:password:fullname:groups:)","title":"init(loginName: String, password: String, fullName: String, groups: [String])","type":"init"}],"path":"\/documentation\/kurrentdb\/users\/create","title":"Users.Create","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/users\/details\/init(loginname:)","title":"init(loginName: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/users\/details\/loginname","title":"let loginName: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/users\/details\/response","title":"Users.Details.Response","type":"struct"}],"path":"\/documentation\/kurrentdb\/users\/details\/responsehandlable-implementations","title":"ResponseHandlable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/users\/details","title":"Users.Details","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/users\/disable\/init(loginname:)","title":"init(loginName: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/users\/disable\/loginname","title":"let loginName: String","type":"property"}],"path":"\/documentation\/kurrentdb\/users\/disable","title":"Users.Disable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/users\/enable\/init(loginname:)","title":"init(loginName: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/users\/enable\/loginname","title":"let loginName: String","type":"property"}],"path":"\/documentation\/kurrentdb\/users\/enable","title":"Users.Enable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/users\/resetpassword\/init(loginname:newpassword:)","title":"init(loginName: String, newPassword: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/users\/resetpassword\/loginname","title":"let loginName: String","type":"property"}],"path":"\/documentation\/kurrentdb\/users\/resetpassword","title":"Users.ResetPassword","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/users\/update\/options\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/users\/update\/options\/fullname","title":"var fullName: String?","type":"property"},{"path":"\/documentation\/kurrentdb\/users\/update\/options\/groups","title":"var groups: [String]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/users\/update\/options\/add(groups:)","title":"func add(groups: String...) -> Users.Update.Options","type":"method"},{"path":"\/documentation\/kurrentdb\/users\/update\/options\/set(fullname:)","title":"func set(fullName: String) -> Users.Update.Options","type":"method"},{"path":"\/documentation\/kurrentdb\/users\/update\/options\/set(groups:)","title":"func set(groups: String...) -> Users.Update.Options","type":"method"}],"path":"\/documentation\/kurrentdb\/users\/update\/options","title":"Users.Update.Options","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/users\/update\/init(loginname:password:options:)","title":"init(loginName: String, password: String, options: Users.Update.Options)","type":"init"}],"path":"\/documentation\/kurrentdb\/users\/update","title":"Users.Update","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/users\/init(settings:calloptions:eventloopgroup:)","title":"init(settings: ClientSettings, callOptions: CallOptions, eventLoopGroup: any EventLoopGroup)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/users\/calloptions","title":"var callOptions: CallOptions","type":"property"},{"path":"\/documentation\/kurrentdb\/users\/eventloopgroup","title":"let eventLoopGroup: any EventLoopGroup","type":"property"},{"path":"\/documentation\/kurrentdb\/users\/settings","title":"var settings: ClientSettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/users\/change(password:origin:to:)","title":"func change(password: String, origin: String, to: String) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/users\/create(loginname:password:fullname:groups:)","title":"func create(loginName: String, password: String, fullName: String, groups: String...) async throws -> UserDetails?","type":"method"},{"path":"\/documentation\/kurrentdb\/users\/details(loginname:)","title":"func details(loginName: String) async throws -> AsyncThrowingStream<UserDetails, any Error>","type":"method"},{"path":"\/documentation\/kurrentdb\/users\/disable(loginname:)","title":"func disable(loginName: String) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/users\/enable(loginname:)","title":"func enable(loginName: String) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/users\/reset(password:loginname:)","title":"func reset(password: String, loginName: String) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/users\/update(fullname:to:with:)","title":"func update(fullName: String, to: String, with: String) async throws","type":"method"},{"path":"\/documentation\/kurrentdb\/users\/update(loginname:password:options:)","title":"func update(loginName: String, password: String, options: Users.Update.Options) async throws","type":"method"}],"path":"\/documentation\/kurrentdb\/users","title":"Users","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/default_gossip_timeout","title":"let DEFAULT_GOSSIP_TIMEOUT: TimeInterval","type":"var"},{"path":"\/documentation\/kurrentdb\/default_port_number","title":"let DEFAULT_PORT_NUMBER: UInt32","type":"var"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/clienterror\/eventdataerror(message:)","title":"case eventDataError(message: String)","type":"case"},{"path":"\/documentation\/kurrentdb\/clienterror\/projectionnameerror(message:)","title":"case projectionNameError(message: String)","type":"case"},{"path":"\/documentation\/kurrentdb\/clienterror\/readresponseerror(message:)","title":"case readResponseError(message: String)","type":"case"},{"path":"\/documentation\/kurrentdb\/clienterror\/streamnameerror(message:)","title":"case streamNameError(message: String)","type":"case"},{"path":"\/documentation\/kurrentdb\/clienterror\/streamnotfound(message:)","title":"case streamNotFound(message: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/clienterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/kurrentdb\/clienterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/clienterror","title":"ClientError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/clientsettingserror\/encodingerror(message:encoding:)","title":"case encodingError(message: String, encoding: String.Encoding)","type":"case"},{"path":"\/documentation\/kurrentdb\/clientsettingserror\/optionnotfound(message:queryitem:)","title":"case optionNotFound(message: String, queryItem: URLQueryItem)","type":"case"},{"path":"\/documentation\/kurrentdb\/clientsettingserror\/parseerror(message:)","title":"case parseError(message: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/clientsettingserror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/kurrentdb\/clientsettingserror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/clientsettingserror","title":"ClientSettingsError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/contenttype\/binary","title":"case binary","type":"case"},{"path":"\/documentation\/kurrentdb\/contenttype\/json","title":"case json","type":"case"},{"path":"\/documentation\/kurrentdb\/contenttype\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/contenttype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/contenttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kurrentdb\/contenttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/contenttype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/contenttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/contenttype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/kurrentdb\/contenttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/kurrentdb\/contenttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/contenttype","title":"ContentType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/cursor\/end","title":"case end","type":"case"},{"path":"\/documentation\/kurrentdb\/cursor\/specified(_:)","title":"case specified(Pointer)","type":"case"},{"path":"\/documentation\/kurrentdb\/cursor\/start","title":"case start","type":"case"}],"path":"\/documentation\/kurrentdb\/cursor","title":"Cursor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/direction\/backward","title":"case backward","type":"case"},{"path":"\/documentation\/kurrentdb\/direction\/forward","title":"case forward","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/direction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kurrentdb\/direction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/direction","title":"Direction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/eventstoreerror\/wrongexpectedversion(expected:current:)","title":"case WrongExpectedVersion(expected: StreamRevision, current: StreamRevision)","type":"case"},{"path":"\/documentation\/kurrentdb\/eventstoreerror\/accessdenied","title":"case accessDenied","type":"case"},{"path":"\/documentation\/kurrentdb\/eventstoreerror\/connectionclosed","title":"case connectionClosed","type":"case"},{"path":"\/documentation\/kurrentdb\/eventstoreerror\/deadlineexceeded","title":"case deadlineExceeded","type":"case"},{"path":"\/documentation\/kurrentdb\/eventstoreerror\/grpc(code:reason:)","title":"case grpc(code: GoogleRPCStatus, reason: String)","type":"case"},{"path":"\/documentation\/kurrentdb\/eventstoreerror\/grpcconnectionerror(error:)","title":"case grpcConnectionError(error: GoogleRPCStatus)","type":"case"},{"path":"\/documentation\/kurrentdb\/eventstoreerror\/illegalstateerror(reason:)","title":"case illegalStateError(reason: String)","type":"case"},{"path":"\/documentation\/kurrentdb\/eventstoreerror\/initializationerror(reason:)","title":"case initializationError(reason: String)","type":"case"},{"path":"\/documentation\/kurrentdb\/eventstoreerror\/internalclienterror","title":"case internalClientError","type":"case"},{"path":"\/documentation\/kurrentdb\/eventstoreerror\/internalparsingerror(reason:)","title":"case internalParsingError(reason: String)","type":"case"},{"path":"\/documentation\/kurrentdb\/eventstoreerror\/notleaderexception(endpoint:)","title":"case notLeaderException(endpoint: Endpoint)","type":"case"},{"path":"\/documentation\/kurrentdb\/eventstoreerror\/resourcealreadyexists","title":"case resourceAlreadyExists","type":"case"},{"path":"\/documentation\/kurrentdb\/eventstoreerror\/resourcedeleted","title":"case resourceDeleted","type":"case"},{"path":"\/documentation\/kurrentdb\/eventstoreerror\/resourcenotfound(reason:)","title":"case resourceNotFound(reason: String)","type":"case"},{"path":"\/documentation\/kurrentdb\/eventstoreerror\/servererror(_:)","title":"case serverError(String)","type":"case"},{"path":"\/documentation\/kurrentdb\/eventstoreerror\/unsupportedfeature","title":"case unsupportedFeature","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/eventstoreerror\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/kurrentdb\/eventstoreerror\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/eventstoreerror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/kurrentdb\/eventstoreerror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/eventstoreerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/kurrentdb\/eventstoreerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/eventstoreerror","title":"EventStoreError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptionserror\/ackerror(reason:)","title":"case ackError(reason: String)","type":"case"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptionserror\/nackerror(reason:)","title":"case nackError(reason: String)","type":"case"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptionserror\/readerror(reason:)","title":"case readError(reason: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/persistentsubscriptionserror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptionserror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/persistentsubscriptionserror","title":"PersistentSubscriptionsError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/readeventerror\/grpcdecodeexception(message:)","title":"case GRPCDecodeException(message: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/readeventerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/kurrentdb\/readeventerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/readeventerror","title":"ReadEventError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streamclienterror\/streamnotfound(message:)","title":"case streamNotFound(message: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streamclienterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/kurrentdb\/streamclienterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/streamclienterror","title":"StreamClientError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streamselector\/all","title":"case all","type":"case"},{"path":"\/documentation\/kurrentdb\/streamselector\/specified(_:)","title":"case specified(T)","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/streamselector\/specified(streamname:)","title":"static func specified(streamName: String) -> StreamSelector<T>","type":"method"}],"path":"\/documentation\/kurrentdb\/streamselector","title":"StreamSelector","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/timespan\/ms(_:)","title":"case ms(Int32)","type":"case"},{"path":"\/documentation\/kurrentdb\/timespan\/ticks(_:)","title":"case ticks(Int64)","type":"case"}],"path":"\/documentation\/kurrentdb\/timespan","title":"TimeSpan","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/topologyclustermode\/dnsdiscovery(from:interval:maxattempts:)","title":"case dnsDiscovery(from: Endpoint, interval: TimeInterval, maxAttempts: Int)","type":"case"},{"path":"\/documentation\/kurrentdb\/topologyclustermode\/gossipcluster(endpoints:nodepreference:timeout:)","title":"case gossipCluster(endpoints: [Endpoint], nodePreference: TopologyClusterMode.NodePreference, timeout: TimeInterval)","type":"case"},{"path":"\/documentation\/kurrentdb\/topologyclustermode\/singlenode(at:)","title":"case singleNode(at: Endpoint)","type":"case"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/topologyclustermode\/nodepreference\/follower","title":"case follower","type":"case"},{"path":"\/documentation\/kurrentdb\/topologyclustermode\/nodepreference\/leader","title":"case leader","type":"case"},{"path":"\/documentation\/kurrentdb\/topologyclustermode\/nodepreference\/random","title":"case random","type":"case"},{"path":"\/documentation\/kurrentdb\/topologyclustermode\/nodepreference\/readonlyreplica","title":"case readOnlyReplica","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/topologyclustermode\/nodepreference\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/topologyclustermode\/nodepreference\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kurrentdb\/topologyclustermode\/nodepreference\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/topologyclustermode\/nodepreference\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/topologyclustermode\/nodepreference\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/kurrentdb\/topologyclustermode\/nodepreference\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/topologyclustermode\/nodepreference","title":"TopologyClusterMode.NodePreference","type":"enum"}],"path":"\/documentation\/kurrentdb\/topologyclustermode","title":"TopologyClusterMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/uuidoption\/string","title":"case string","type":"case"},{"path":"\/documentation\/kurrentdb\/uuidoption\/structured","title":"case structured","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/uuidoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kurrentdb\/uuidoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/uuidoption","title":"UUIDOption","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/foundation\/uuid\/option\/string","title":"case string","type":"case"},{"path":"\/documentation\/kurrentdb\/foundation\/uuid\/option\/structured","title":"case structured","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/foundation\/uuid\/option\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kurrentdb\/foundation\/uuid\/option\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/kurrentdb\/foundation\/uuid\/option","title":"UUID.Option","type":"enum"}],"path":"\/documentation\/kurrentdb\/foundation\/uuid","title":"UUID","type":"extension"}],"path":"\/documentation\/kurrentdb\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/niossl\/niossltrustroots\/crtinbundle(_:inbundle:)","title":"static func crtInBundle(String, inBundle: Bundle) -> NIOSSLTrustRoots?","type":"method"},{"path":"\/documentation\/kurrentdb\/niossl\/niossltrustroots\/fileinbundle(forresource:withextension:inbundle:)","title":"static func fileInBundle(forResource: String, withExtension: String, inBundle: Bundle) -> NIOSSLTrustRoots?","type":"method"},{"path":"\/documentation\/kurrentdb\/niossl\/niossltrustroots\/peminbundle(_:inbundle:)","title":"static func pemInBundle(String, inBundle: Bundle) -> NIOSSLTrustRoots?","type":"method"}],"path":"\/documentation\/kurrentdb\/niossl\/niossltrustroots","title":"NIOSSLTrustRoots","type":"extension"}],"path":"\/documentation\/kurrentdb\/niossl","title":"NIOSSL","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kurrentdb\/swift\/string\/parse()","title":"func parse() throws -> ClientSettings","type":"method"}],"path":"\/documentation\/kurrentdb\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/kurrentdb\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/kurrentdb","title":"KurrentDB","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}